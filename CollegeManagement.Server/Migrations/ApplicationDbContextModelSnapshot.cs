// <auto-generated />
using System;
using CollegeManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CollegeManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CollegeManagement.Models.Assignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int?>("CourseCode")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentId");

                    b.ToTable("Assignments", (string)null);

                    b.HasData(
                        new
                        {
                            AssignmentId = 1,
                            CourseCode = 1,
                            Question = "Write a program to calculate factorial",
                            StudentId = 1,
                            SubmissionTime = new DateTime(2024, 4, 13, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5940)
                        },
                        new
                        {
                            AssignmentId = 2,
                            CourseCode = 2,
                            Question = "Design a circuit for a digital clock",
                            StudentId = 2,
                            SubmissionTime = new DateTime(2024, 4, 13, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5949)
                        },
                        new
                        {
                            AssignmentId = 3,
                            CourseCode = 3,
                            Question = "Solve the second law of thermodynamics",
                            StudentId = 3,
                            SubmissionTime = new DateTime(2024, 4, 13, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5951)
                        },
                        new
                        {
                            AssignmentId = 4,
                            CourseCode = 4,
                            Question = "Analyze a truss structure using FEM",
                            StudentId = 4,
                            SubmissionTime = new DateTime(2024, 4, 13, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5952)
                        },
                        new
                        {
                            AssignmentId = 5,
                            CourseCode = 5,
                            Question = "Design a reactor for a chemical process",
                            StudentId = 5,
                            SubmissionTime = new DateTime(2024, 4, 13, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5954)
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.AssignmentSubmission", b =>
                {
                    b.Property<int>("SubmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissionId"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseCode")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubmissionId");

                    b.ToTable("AssignmentSubmissions", (string)null);

                    b.HasData(
                        new
                        {
                            SubmissionId = 1,
                            Answer = "Here's the code for factorial calculation",
                            CourseCode = 1,
                            StudentId = 1,
                            SubmissionDate = new DateTime(2024, 4, 12, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5973)
                        },
                        new
                        {
                            SubmissionId = 2,
                            Answer = "Attached is the circuit diagram",
                            CourseCode = 2,
                            StudentId = 2,
                            SubmissionDate = new DateTime(2024, 4, 12, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5975)
                        },
                        new
                        {
                            SubmissionId = 3,
                            Answer = "Solution to the problem is attached",
                            CourseCode = 3,
                            StudentId = 3,
                            SubmissionDate = new DateTime(2024, 4, 12, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5977)
                        },
                        new
                        {
                            SubmissionId = 4,
                            Answer = "FEM analysis report attached",
                            CourseCode = 4,
                            StudentId = 4,
                            SubmissionDate = new DateTime(2024, 4, 12, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5978)
                        },
                        new
                        {
                            SubmissionId = 5,
                            Answer = "Chemical reactor design is attached",
                            CourseCode = 5,
                            StudentId = 5,
                            SubmissionDate = new DateTime(2024, 4, 12, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5980)
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("IsPresent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId");

                    b.ToTable("Attendances", (string)null);

                    b.HasData(
                        new
                        {
                            AttendanceId = 1,
                            AttendanceDate = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6169),
                            FacultyId = 1,
                            IsPresent = "Yes",
                            StudentId = 1
                        },
                        new
                        {
                            AttendanceId = 2,
                            AttendanceDate = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6171),
                            FacultyId = 2,
                            IsPresent = "Yes",
                            StudentId = 2
                        },
                        new
                        {
                            AttendanceId = 3,
                            AttendanceDate = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6174),
                            FacultyId = 3,
                            IsPresent = "Yes",
                            StudentId = 3
                        },
                        new
                        {
                            AttendanceId = 4,
                            AttendanceDate = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6175),
                            FacultyId = 4,
                            IsPresent = "Yes",
                            StudentId = 4
                        },
                        new
                        {
                            AttendanceId = 5,
                            AttendanceDate = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6176),
                            FacultyId = 5,
                            IsPresent = "Yes",
                            StudentId = 5
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.Calendar", b =>
                {
                    b.Property<int>("CalendarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalendarId"));

                    b.Property<DateTime>("DateOfEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CalendarId");

                    b.ToTable("Calendars", (string)null);

                    b.HasData(
                        new
                        {
                            CalendarId = 6,
                            DateOfEdit = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5810),
                            Reason = "Semester start",
                            Status = "Active"
                        },
                        new
                        {
                            CalendarId = 7,
                            DateOfEdit = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5824),
                            Reason = "Public holiday",
                            Status = "Inactive"
                        },
                        new
                        {
                            CalendarId = 8,
                            DateOfEdit = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5826),
                            Reason = "Final exams begin",
                            Status = "Active"
                        },
                        new
                        {
                            CalendarId = 9,
                            DateOfEdit = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5827),
                            Reason = "Semester break",
                            Status = "Inactive"
                        },
                        new
                        {
                            CalendarId = 10,
                            DateOfEdit = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5828),
                            Reason = "Semester end",
                            Status = "Active"
                        },
                        new
                        {
                            CalendarId = 1,
                            DateOfEdit = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6280),
                            Reason = "Holiday",
                            Status = "Active"
                        },
                        new
                        {
                            CalendarId = 2,
                            DateOfEdit = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6281),
                            Reason = "Maintenance",
                            Status = "Inactive"
                        },
                        new
                        {
                            CalendarId = 3,
                            DateOfEdit = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6282),
                            Reason = "Training",
                            Status = "Active"
                        },
                        new
                        {
                            CalendarId = 4,
                            DateOfEdit = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6283),
                            Reason = "Meeting",
                            Status = "Inactive"
                        },
                        new
                        {
                            CalendarId = 5,
                            DateOfEdit = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6284),
                            Reason = "Conference",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.Course", b =>
                {
                    b.Property<int>("CourseCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseCode"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("CourseCode");

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            CourseCode = 1,
                            CourseName = "Introduction to Computer Science",
                            FacultyId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            CourseCode = 2,
                            CourseName = "Electromagnetic Theory",
                            FacultyId = 2,
                            StudentId = 2
                        },
                        new
                        {
                            CourseCode = 3,
                            CourseName = "Thermodynamics",
                            FacultyId = 3,
                            StudentId = 3
                        },
                        new
                        {
                            CourseCode = 4,
                            CourseName = "Structural Analysis",
                            FacultyId = 4,
                            StudentId = 4
                        },
                        new
                        {
                            CourseCode = 5,
                            CourseName = "Chemical Reaction Engineering",
                            FacultyId = 5,
                            StudentId = 5
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<string>("FacultyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FacultyDoj")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacultyMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FacultyMobileNo")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FacultyId");

                    b.ToTable("Faculties", (string)null);

                    b.HasData(
                        new
                        {
                            FacultyId = 6,
                            FacultyAddress = "123 Elm St",
                            FacultyDoj = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5911),
                            FacultyMail = "prof1@example.com",
                            FacultyMobileNo = 1112223333L,
                            UserId = 11
                        },
                        new
                        {
                            FacultyId = 7,
                            FacultyAddress = "456 Oak St",
                            FacultyDoj = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5914),
                            FacultyMail = "prof2@example.com",
                            FacultyMobileNo = 4445556666L,
                            UserId = 12
                        },
                        new
                        {
                            FacultyId = 8,
                            FacultyAddress = "789 Pine St",
                            FacultyDoj = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5916),
                            FacultyMail = "prof3@example.com",
                            FacultyMobileNo = 7778889999L,
                            UserId = 13
                        },
                        new
                        {
                            FacultyId = 9,
                            FacultyAddress = "101 Maple St",
                            FacultyDoj = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5917),
                            FacultyMail = "prof4@example.com",
                            FacultyMobileNo = 1231231234L,
                            UserId = 14
                        },
                        new
                        {
                            FacultyId = 10,
                            FacultyAddress = "202 Cedar St",
                            FacultyDoj = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(5919),
                            FacultyMail = "prof5@example.com",
                            FacultyMobileNo = 4564564567L,
                            UserId = 15
                        },
                        new
                        {
                            FacultyId = 1,
                            FacultyAddress = "123 Main St",
                            FacultyDoj = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6327),
                            FacultyMail = "john@example.com",
                            FacultyMobileNo = 1234567890L,
                            UserId = 2
                        },
                        new
                        {
                            FacultyId = 2,
                            FacultyAddress = "456 Elm St",
                            FacultyDoj = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6328),
                            FacultyMail = "jane@example.com",
                            FacultyMobileNo = 9876543210L,
                            UserId = 3
                        },
                        new
                        {
                            FacultyId = 3,
                            FacultyAddress = "789 Oak St",
                            FacultyDoj = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6330),
                            FacultyMail = "smith@example.com",
                            FacultyMobileNo = 5555555555L,
                            UserId = 4
                        },
                        new
                        {
                            FacultyId = 4,
                            FacultyAddress = "101 Pine St",
                            FacultyDoj = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6331),
                            FacultyMail = "emily@example.com",
                            FacultyMobileNo = 9999999999L,
                            UserId = 5
                        },
                        new
                        {
                            FacultyId = 5,
                            FacultyAddress = "202 Maple St",
                            FacultyDoj = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6332),
                            FacultyMail = "mary@example.com",
                            FacultyMobileNo = 1111111111L,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.FacultyCourse", b =>
                {
                    b.Property<int>("FacultyCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyCourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.HasKey("FacultyCourseId");

                    b.ToTable("FacultyCourses", (string)null);

                    b.HasData(
                        new
                        {
                            FacultyCourseId = 1,
                            CourseName = "Computer Science",
                            FacultyId = 1
                        },
                        new
                        {
                            FacultyCourseId = 2,
                            CourseName = "Electrical Engineering",
                            FacultyId = 2
                        },
                        new
                        {
                            FacultyCourseId = 3,
                            CourseName = "Mechanical Engineering",
                            FacultyId = 3
                        },
                        new
                        {
                            FacultyCourseId = 4,
                            CourseName = "Civil Engineering",
                            FacultyId = 4
                        },
                        new
                        {
                            FacultyCourseId = 5,
                            CourseName = "Chemical Engineering",
                            FacultyId = 5
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.FeeDetail", b =>
                {
                    b.Property<int>("FeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeeId"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("FeeId");

                    b.ToTable("FeeDetails", (string)null);

                    b.HasData(
                        new
                        {
                            FeeId = 1,
                            Amount = 5000.0,
                            DateOfPayment = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6049),
                            StudentId = 1
                        },
                        new
                        {
                            FeeId = 2,
                            Amount = 6000.0,
                            DateOfPayment = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6051),
                            StudentId = 2
                        },
                        new
                        {
                            FeeId = 3,
                            Amount = 5500.0,
                            DateOfPayment = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6053),
                            StudentId = 3
                        },
                        new
                        {
                            FeeId = 4,
                            Amount = 5800.0,
                            DateOfPayment = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6054),
                            StudentId = 4
                        },
                        new
                        {
                            FeeId = 5,
                            Amount = 5200.0,
                            DateOfPayment = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6055),
                            StudentId = 5
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.IssueReport", b =>
                {
                    b.Property<long>("Ticket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Ticket"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Ticket");

                    b.HasIndex("UserId");

                    b.ToTable("IssueReports", (string)null);

                    b.HasData(
                        new
                        {
                            Ticket = 1L,
                            Description = "Bug in login page",
                            IsResolved = false,
                            UserId = 2
                        },
                        new
                        {
                            Ticket = 2L,
                            Description = "Error in payment processing",
                            IsResolved = false,
                            UserId = 3
                        },
                        new
                        {
                            Ticket = 3L,
                            Description = "Website loading slow",
                            IsResolved = false,
                            UserId = 4
                        },
                        new
                        {
                            Ticket = 4L,
                            Description = "Missing functionality in dashboard",
                            IsResolved = false,
                            UserId = 5
                        },
                        new
                        {
                            Ticket = 5L,
                            Description = "Data not updating in real-time",
                            IsResolved = false,
                            UserId = 6
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.LeaveDetail", b =>
                {
                    b.Property<int>("LeaveDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveDetailsId"));

                    b.Property<DateTime>("DateOfLeave")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LeaveDetailsId");

                    b.ToTable("LeaveDetails", (string)null);

                    b.HasData(
                        new
                        {
                            LeaveDetailsId = 1,
                            DateOfLeave = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6234),
                            IsApproved = true,
                            Reason = "Vacation",
                            UserId = 2
                        },
                        new
                        {
                            LeaveDetailsId = 2,
                            DateOfLeave = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6237),
                            IsApproved = true,
                            Reason = "Sick leave",
                            UserId = 3
                        },
                        new
                        {
                            LeaveDetailsId = 3,
                            DateOfLeave = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6238),
                            IsApproved = false,
                            Reason = "Personal reasons",
                            UserId = 4
                        },
                        new
                        {
                            LeaveDetailsId = 4,
                            DateOfLeave = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6239),
                            IsApproved = false,
                            Reason = "Family emergency",
                            UserId = 5
                        },
                        new
                        {
                            LeaveDetailsId = 5,
                            DateOfLeave = new DateTime(2024, 4, 6, 1, 12, 42, 791, DateTimeKind.Local).AddTicks(6240),
                            IsApproved = true,
                            Reason = "Attending conference",
                            UserId = 6
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.Models.HomePageDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomePageDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Key = "ScrollingNotification",
                            Value = "Admissions are open now. Please check admission form soon. Seats are filling..!"
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.Parent", b =>
                {
                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParentId"));

                    b.Property<string>("ParentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ParentId");

                    b.ToTable("Parents", (string)null);

                    b.HasData(
                        new
                        {
                            ParentId = 1,
                            ParentAddress = "789 Oak St",
                            UserId = 4
                        },
                        new
                        {
                            ParentId = 2,
                            ParentAddress = "101 Pine St",
                            UserId = 5
                        },
                        new
                        {
                            ParentId = 3,
                            ParentAddress = "202 Maple St",
                            UserId = 6
                        },
                        new
                        {
                            ParentId = 4,
                            ParentAddress = "303 Elm St",
                            UserId = 7
                        },
                        new
                        {
                            ParentId = 5,
                            ParentAddress = "404 Oak St",
                            UserId = 8
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentDepartment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseName = "B.Tech",
                            StudentAddress = "123 Main St",
                            StudentDepartment = "Computer Science",
                            StudentMail = "john@example.com",
                            StudentMobile = "1234567890",
                            UserId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            CourseName = "B.Tech",
                            StudentAddress = "456 Elm St",
                            StudentDepartment = "Electrical Engineering",
                            StudentMail = "jane@example.com",
                            StudentMobile = "9876543210",
                            UserId = 3
                        },
                        new
                        {
                            StudentId = 3,
                            CourseName = "B.Tech",
                            StudentAddress = "789 Oak St",
                            StudentDepartment = "Mechanical Engineering",
                            StudentMail = "smith@example.com",
                            StudentMobile = "5555555555",
                            UserId = 4
                        },
                        new
                        {
                            StudentId = 4,
                            CourseName = "B.Tech",
                            StudentAddress = "101 Pine St",
                            StudentDepartment = "Civil Engineering",
                            StudentMail = "emily@example.com",
                            StudentMobile = "9999999999",
                            UserId = 5
                        },
                        new
                        {
                            StudentId = 5,
                            CourseName = "B.Tech",
                            StudentAddress = "202 Maple St",
                            StudentDepartment = "Chemical Engineering",
                            StudentMail = "mary@example.com",
                            StudentMobile = "1111111111",
                            UserId = 6
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.StudentCourse", b =>
                {
                    b.Property<int>("SCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SCourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("SCourseId");

                    b.ToTable("StudentCourses", (string)null);

                    b.HasData(
                        new
                        {
                            SCourseId = 6,
                            CourseName = "Introduction to Programming",
                            StudentId = 1
                        },
                        new
                        {
                            SCourseId = 7,
                            CourseName = "Digital Circuits",
                            StudentId = 2
                        },
                        new
                        {
                            SCourseId = 8,
                            CourseName = "Thermodynamics I",
                            StudentId = 3
                        },
                        new
                        {
                            SCourseId = 9,
                            CourseName = "Structural Analysis",
                            StudentId = 4
                        },
                        new
                        {
                            SCourseId = 10,
                            CourseName = "Chemical Reaction Engineering",
                            StudentId = 5
                        },
                        new
                        {
                            SCourseId = 1,
                            CourseName = "Introduction to Computer Science",
                            StudentId = 1
                        },
                        new
                        {
                            SCourseId = 2,
                            CourseName = "Electromagnetic Theory",
                            StudentId = 2
                        },
                        new
                        {
                            SCourseId = 3,
                            CourseName = "Thermodynamics",
                            StudentId = 3
                        },
                        new
                        {
                            SCourseId = 4,
                            CourseName = "Structural Analysis",
                            StudentId = 4
                        },
                        new
                        {
                            SCourseId = 5,
                            CourseName = "Chemical Reaction Engineering",
                            StudentId = 5
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 6,
                            FirstName = "Alice",
                            LastName = "Smith",
                            Password = "pass123",
                            UserName = "student1",
                            UserType = "Student"
                        },
                        new
                        {
                            UserId = 7,
                            FirstName = "Bob",
                            LastName = "Johnson",
                            Password = "pass456",
                            UserName = "student2",
                            UserType = "Student"
                        },
                        new
                        {
                            UserId = 8,
                            FirstName = "Charlie",
                            LastName = "Brown",
                            Password = "pass789",
                            UserName = "student3",
                            UserType = "Student"
                        },
                        new
                        {
                            UserId = 9,
                            FirstName = "Diana",
                            LastName = "Davis",
                            Password = "pass101",
                            UserName = "student4",
                            UserType = "Student"
                        },
                        new
                        {
                            UserId = 10,
                            FirstName = "Eva",
                            LastName = "Wilson",
                            Password = "pass111",
                            UserName = "student5",
                            UserType = "Student"
                        },
                        new
                        {
                            UserId = 1,
                            FirstName = "Admin",
                            LastName = "User",
                            Password = "admin123",
                            UserName = "admin",
                            UserType = "Admin"
                        },
                        new
                        {
                            UserId = 2,
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "pass123",
                            UserName = "john_doe",
                            UserType = "Regular"
                        },
                        new
                        {
                            UserId = 3,
                            FirstName = "Jane",
                            LastName = "Doe",
                            Password = "pass456",
                            UserName = "jane_doe",
                            UserType = "Regular"
                        },
                        new
                        {
                            UserId = 4,
                            FirstName = "Smith",
                            LastName = "Johnson",
                            Password = "smith123",
                            UserName = "smith",
                            UserType = "Regular"
                        },
                        new
                        {
                            UserId = 5,
                            FirstName = "Emily",
                            LastName = "Smith",
                            Password = "emily123",
                            UserName = "emily",
                            UserType = "Regular"
                        });
                });

            modelBuilder.Entity("CollegeManagement.Models.IssueReport", b =>
                {
                    b.HasOne("CollegeManagement.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
